// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  Id          String    @id @default(uuid())
  Role        Role      @default(CLIENT)
  Phone       String    @unique()
  RelatedOtp  String?
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @default(now())
  IsActivated Boolean   @default(false)
  UpdateBy    String ?
  CreatedBy   String ?
  Profile     Profile?

  @@index([Phone], name:"numero_index")

}

enum Role {
  ADMIN
  CLIENT
  AGENT
}

model Profile {
  Id                    String                      @id @default(uuid())
  userId                String                      @db.Char(36)
  User                  User                        @relation(fields: [userId], references: [Id], onDelete: Cascade, onUpdate: NoAction )

}

model RemplacementSIM {
  Id                    String                      @id @default(uuid())
  Reference             String
  DateNaisCli           String
  Localisation          String ?  //Lieu d'habitation du client
  NumMSISDN             String
  AncienICCID           String ?
  NewICCID              String
  TypePiece             String
  NumPiece              String
  CreatedAt             DateTime                    @default(now())
  UpdatedAt             DateTime                    @default(now())
  UpdateBy              String ?
  CreatedBy             String ?

}

model IdentificationSIM {
  Id                    String                      @id @default(uuid())
  TelPrincipal          String
  TelSecondaire         String
  TypePiece             String
  NumPiece              String
  LieuPiece             String
  DateEmPiece           DateTime
  DateExPiece           DateTime
  CiviliteCli           String
  GenreCli              String
  NomCli                String
  PrenomCli             String
  LieuNaisCli           String
  DateNaisCli           String
  ProfCli               String
  AdrGeoCli             String 
  Nationalite           String
  Photo                 String
  PhotoVerso            String
  PhotoRecto            String
  AdrPostale            String ?
  Pays                  String ?
  CreatedAt             DateTime                    @default(now())
  UpdatedAt             DateTime                    @default(now())
  UpdateBy              String ?
  CreatedBy             String ?

}

model Requete {
  Id                    String                      @id @default(uuid())
  CreatedAt             DateTime                    @default(now())
  UpdatedAt             DateTime                    @default(now())
  UpdateBy              String ?
  CreatedBy             String ?
}